{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name | default "pccs" }}
  labels:
    {{- include "pccs.labels" . | nindent 4 }}
    app.kubernetes.io/component: ingress
  annotations:
    {{- if .Values.ingress.certManager }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- if .Values.certManager.issuer.name }}
    cert-manager.io/issuer: {{ .Values.certManager.issuer.name | quote }}
    {{- end }}
    {{- if .Values.ingress.nginx.backendVerification }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-tls-verify: "true"
    {{- end }}
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className | default "nginx" }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.tlsSecretName | default "ingress-tls" }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
{{- $releaseName := .Release.Name | default "pccs" }}
{{- range .Values.ingress.paths }}
          - path: {{ . | quote }}
            pathType: Prefix
            backend:
              service:
                name: {{ $releaseName }}
                port:
                  number: {{ $.Values.service.port }}
{{- end }}
{{- end }}
